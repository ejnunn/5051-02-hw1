@using HW1c.Models
@model ReportViewModel

@{

    ViewBag.Title = "Report";
}

<h1 style="margin:10px; padding-top:10px; padding-bottom:20px; text-align:center"> Weekly Reports</h1>
<!--<p align="right" style="padding-top:8px"><button class="button">Export</button></p>
    -->
<meta name="viewport" content="width=device-width, initial-scale=1">
<link rel="stylesheet" href="https://www.w3schools.com/w3css/4/w3.css">

<div class="w3-container">
    <div class="w3-bar w3-black">
        <a href="~/Report/CustomReport" class="w3-bar-item w3-button">Custom Report</a>
        <a href="#" class="w3-bar-item w3-button">Share</a>
        <a href="#" class="w3-bar-item w3-button">Export</a>
    </div>
</div>

<div class=" container">
    <div id="chartContainer" style="height: 400px; width: 100%;">
        <script>
            window.onload = function () {

                var dps = []; // dataPoints
                var chart = new CanvasJS.Chart("chartContainer", {
                    title: {
                        text: "Total Photos Taken : Past Week"
                    },
                    axisY: {
                        includeZero: false
                    },
                    data: [{
                        type: "line",
                        dataPoints: dps
                    }]
                });

                var xVal = 0;
                var yVal = 50;
                var updateInterval = 10000;
                var dataLength = 7; // number of dataPoints visible at any point

                var updateChart = function (count) {

                    count = count || 1;

                    for (var j = 0; j < count; j++) {
                        yVal = yVal + Math.round(5 + Math.random() * (-5 - 5));
                        dps.push({
                            x: xVal,
                            y: yVal
                        });
                        xVal++;
                    }

                    if (dps.length > dataLength) {
                        dps.shift();
                    }

                    chart.render();
                };

                updateChart(dataLength);
                setInterval(function () { updateChart() }, updateInterval);

            }
        </script>
    </div>
</div>

<script src="https://canvasjs.com/assets/script/canvasjs.min.js"></script>


<div class="container">
    <!-- 1st row of Weekly Reports -->
    <div class="row">
        <div class="col">
            <script type="text/javascript" src="https://www.gstatic.com/charts/loader.js"></script>
        </div>
    </div>

    <!-- 2nd row of Weekly Reports -->
    <div class="row">
        <!-- Photos taken by Phone Type -->
        <div class="col-6">
            <div id="piechart"></div>
        </div>

        <!-- OS Versions -->
        <div class="col-6">
            <div id="piechart2"></div>
        </div>
    </div>
</div>



<script type="text/javascript">
    // Load google charts
    google.charts.load('current', { 'packages': ['corechart'] });
    google.charts.setOnLoadCallback(drawChart);

    // Draw the chart and set the chart values
    function drawChart() {
        var data = google.visualization.arrayToDataTable([
            ['Task', 'Photos Taken'],
            ['Samsung Galaxy J5 Prime', 85],
            ['Nokia 3.1', 15],
            ['Samsung Galaxy J7 Prime', 50],
        ]);

        // Optional; add a title and set the width and height of the chart
        var options = { 'title': 'Photos take by phone type', 'width': 400, 'height': 300 };

        // Display the chart inside the <div> element with id="piechart"
        var chart = new google.visualization.PieChart(document.getElementById('piechart'));
        chart.draw(data, options);
    }
</script>

<script type="text/javascript" src="https://www.gstatic.com/charts/loader.js"></script>

<script type="text/javascript">
    // Load google charts
    google.charts.load('current', { 'packages': ['corechart'] });
    google.charts.setOnLoadCallback(drawSecondChart);

    // Draw the chart and set the chart values
    function drawSecondChart() {
        var data = google.visualization.arrayToDataTable([
            ['Task', 'Photos Taken'],
            ['KitKat 4.4', 135],
            ['Jelly Bean 4.3', 15],
        ]);

        // Optional; add a title and set the width and height of the chart
        var options = { 'title': 'Photos take by phone type', 'width': 400, 'height': 300 };

        // Display the chart inside the <div> element with id="piechart"
        var chart = new google.visualization.PieChart(document.getElementById('piechart2'));
        chart.draw(data, options);
    }
</script>

